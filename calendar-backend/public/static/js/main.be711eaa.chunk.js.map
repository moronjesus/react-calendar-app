{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/date-events.js","actions/events.js","actions/auth.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvent","events","map","eve","end","moment","toDate","start","actionAddNewEvent","event","type","payload","actionClearActiveEvent","actionUpdateActiveEvent","actionDeletedEvent","eventLoaded","eventLogoutClear","checkingFinish","login","user","logout","NavBar","classes","useStyles","name","useSelector","state","auth","dispatch","useDispatch","className","root","AppBar","position","Toolbar","Typography","variant","title","Button","color","onClick","clear","makeStyles","theme","flexGrow","marginBottom","menuButton","marginRight","spacing","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiActionOpenModal","now","minutes","seconds","add","hourMore","clone","initialEvent","notes","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","modal","ui","activeEvent","calendar","formValues","setFormValues","useEffect","handleInputChange","target","value","handleClose","Dialog","open","onClose","aria-labelledby","disableBackdropClick","noValidate","autoComplete","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","a","id","resp","json","ok","msg","console","log","getState","uid","_id","startAddNewEvent","DialogTitle","Divider","DialogContent","onChange","minDate","DialogContentText","TextField","label","margin","fullWidth","multiline","rows","DialogActions","AddNewFab","Fab","aria-label","bottom","padding","right","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","Card","CardContent","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","eventPropGetter","isSelected","style","backgroundColor","borderRadius","opacity","display","onView","setItem","view","components","useForm","initialState","values","setValues","reset","initForm","email","password","LoginScreen","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","paper","Avatar","avatar","form","Date","getTime","startLogin","required","autoFocus","submit","to","Box","mt","height","image","backgroundImage","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","flexDirection","alignItems","secondary","main","width","marginTop","confirmpassword","RegisterScreen","startRegister","AuthRouter","exact","path","PublicRoute","isAunthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be711eaa.chunk.js","sourcesContent":[" const baseUrl = process.env.REACT_APP_API_URL;\r\n \r\n export const fetchSinToken = ( endpoint, data, method = 'GET') =>{\r\n\r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n    \r\n    if( method === 'GET' ){\r\n\r\n        return fetch( url );\r\n    }else{\r\n\r\n        return fetch(url , {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify( data ),\r\n\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n \r\nexport const fetchConToken = ( endpoint, data, method = 'GET') =>{\r\n\r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n    \r\n    if( method === 'GET' ){\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'x-token':token,\r\n            }\r\n        } );\r\n    }else{\r\n\r\n        return fetch(url , {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token':token,\r\n            },\r\n            body:JSON.stringify( data ),\r\n\r\n        })\r\n\r\n    }\r\n\r\n}","export const types = {\r\n\r\n    uiOpenModal : '[ui] OPEN MODAL ',\r\n    uiCloseModal : '[ui] CLOSE MODAL',\r\n    \r\n    eventLogoutClear : '[event] CLEAR LOGOUT',\r\n    eventStartAddNew: '[event]  START ADD EVENT',\r\n    eventAddNew : '[event] ADD EVENT',\r\n    eventSetActive: '[event] SET ACTIVE ',\r\n    eventClearActiveEvent: '[event] CLEAR ACTIVE EVENT ',\r\n    eventUpdated: '[event] EVENT UPDATED ',\r\n    eventDeleted: '[event] EVENT DELETED ',\r\n    eventLoaded: '[event]  EVENT LOADED ',\r\n\r\n    authLogin: '[auth] LOGIN',\r\n    authRegister: '[auth] REGISTER',\r\n    authTokenRenew: '[auth] TOKEN RENOVAR',\r\n    authLogout: '[auth] LOGOUT',\r\n    authCheckingFinish: '[auth] FINISH CHECKING'\r\n\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvent = ( events = [] )=>{\r\n    \r\n    return events.map(\r\n        ( eve ) =>({\r\n\r\n            ...eve,\r\n            end: moment( eve.end).toDate(),\r\n            start: moment( eve.start).toDate(),\r\n\r\n        })\r\n    ) \r\n}","import Swal from \"sweetalert2\";\r\nimport { prepareEvent } from \"../helpers/date-events\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const startAddNewEvent = ( event ) =>{ \r\n\r\n    return async ( dispatch, getState ) =>{\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n            try {\r\n \r\n            const resp = await fetchConToken('event', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id = body.event.id;\r\n                event.user ={\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( actionAddNewEvent( event ) )\r\n\r\n            }\r\n           \r\n\r\n                \r\n            } catch (error) {\r\n                \r\n            }\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst actionAddNewEvent = ( event ) =>({ \r\n    type: types.eventAddNew,\r\n    payload: event\r\n\r\n});\r\n\r\n\r\n\r\nexport const actionSetActive = ( event ) =>({ \r\n    type: types.eventSetActive,\r\n    payload: event\r\n\r\n});\r\n\r\n\r\n\r\nexport const actionClearActiveEvent = ( ) =>({ \r\n    type: types.eventClearActiveEvent,\r\n\r\n});\r\n\r\n\r\n\r\nexport const startUpdateEvent = ( event ) =>{\r\n\r\n    return async ( dispatch )=>{\r\n        \r\n        try {\r\n\r\n            const resp = await fetchConToken( `event/${event.id}`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                dispatch( actionUpdateActiveEvent(event) );\r\n\r\n            }else{\r\n                Swal.fire('Eror', body.msg, 'error')\r\n            }\r\n            \r\n\r\n            \r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const actionUpdateActiveEvent = ( event ) =>({ \r\n    type: types.eventUpdated,\r\n    payload: event\r\n\r\n});\r\n\r\n\r\nexport const startDeletedEvent = ( ) =>{\r\n\r\n    return async ( dispatch, getState )=>{\r\n        \r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n       \r\n        try {\r\n\r\n            const resp = await fetchConToken( `event/${id}`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                dispatch( actionDeletedEvent() );\r\n\r\n            }else{\r\n                Swal.fire('Eror', body.msg, 'error')\r\n            }\r\n            \r\n\r\n            \r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const actionDeletedEvent = () =>({ \r\n    type: types.eventDeleted,\r\n\r\n});\r\n\r\n\r\n\r\nexport const eventStartLoading = ( ) =>{\r\n   \r\n        return async( dispatch ) =>{\r\n\r\n            try {\r\n                \r\n                const resp = await fetchConToken('event');\r\n                const body = await resp.json();\r\n    \r\n                const events = prepareEvent( body.msg )\r\n               dispatch( eventLoaded( events ) );\r\n               \r\n            } catch (error) {\r\n                \r\n                console.log(error);\r\n\r\n            }      \r\n    \r\n        }\r\n   \r\n};\r\n\r\n\r\n\r\nconst eventLoaded = ( events ) =>({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n\r\n});\r\n\r\nexport const eventLogoutClear = ({\r\n    \r\n    type: types.eventLogoutClear\r\n\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogoutClear } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) =>{\r\n\r\n    return async( dispatch ) =>{\r\n\r\n       const resp = await fetchSinToken('auth', { email, password }, 'POST' );\r\n       const body = await resp.json();\r\n\r\n        if( body.ok){\r\n            \r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name:body.name,\r\n            }) )\r\n\r\n        }else{\r\n\r\n                Swal.fire('Error', body.msg, 'error');\r\n\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const startRegister = ( name, email, password  ) =>{\r\n\r\n    return async( dispatch ) =>{\r\n\r\n        const resp = await fetchSinToken('auth/register',{ name, email, password, }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        }else{\r\n\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport const startChecking = () =>{\r\n\r\n    return async( dispatch ) =>{\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        }else{\r\n\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nconst checkingFinish = () =>({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n\r\n});\r\n\r\nexport const startLogout = () =>{\r\n\r\n    return( dispatch ) =>{\r\n\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch ( eventLogoutClear ) \r\n    }\r\n    \r\n\r\n}\r\n\r\nconst logout = () =>({\r\n\r\n    type:types.authLogout,\r\n})\r\n\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n/* import IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu'; */\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {startLogout} from '../../actions/auth'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const classes = useStyles();\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n  const handleLogout = () =>{\r\n    \r\n    dispatch( startLogout() )\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         {/*  <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            { name }\r\n          </Typography>\r\n          <Button \r\n            color=\"inherit\"\r\n            onClick= { handleLogout }\r\n          >\r\n            Salir\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: 20,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ( { event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n          <span>{ title }</span>\r\n          <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiActionOpenModal = () =>({\r\n    type: types.uiOpenModal,\r\n\r\n});\r\n\r\nexport const uiActionCloseModal = () =>({\r\n    type: types.uiCloseModal,\r\n\r\n})","import React, { useEffect, useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { DialogContentText, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiActionCloseModal } from '../../actions/ui';\r\nimport { actionClearActiveEvent, startAddNewEvent, startUpdateEvent } from '../../actions/events';\r\n\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst hourMore = now.clone().add(1, 'hours');\r\n\r\nconst initialEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: hourMore.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const classes = useStyles();\r\n    const [ dateStart, setDateStart ] = useState(now.toDate())\r\n    const [ dateEnd, setDateEnd ] = useState(hourMore.toDate());\r\n    const { modal } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n   /*  const [ titleValid, setTitleValid ] = useState(true); */\r\n\r\n    const [ formValues, setFormValues ] = useState( initialEvent );\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n       \r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        }else{\r\n\r\n            setFormValues( initialEvent )\r\n        }\r\n        \r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        })\r\n    }\r\n\r\n    const handleClose = () =>{   \r\n        dispatch( uiActionCloseModal() );\r\n        dispatch( actionClearActiveEvent() );\r\n        setFormValues( initialEvent );\r\n\r\n    }\r\n\r\n\r\n    const handletSubmitForm = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        /* if(title.trim().length < 2 ){\r\n\r\n\r\n        } */\r\n        if( activeEvent ){\r\n            dispatch( startUpdateEvent( formValues ) );\r\n\r\n        } else{\r\n\r\n            dispatch( startAddNewEvent( formValues ))\r\n        }\r\n        \r\n        handleClose();\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={ modal } onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={ !modal }>\r\n\r\n                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handletSubmitForm}>\r\n                    {\r\n                        (activeEvent )\r\n                        ? <DialogTitle id=\"form-dialog-title\">Editando evento</DialogTitle>\r\n                        : <DialogTitle id=\"form-dialog-title\">Nuevo evento</DialogTitle>\r\n                    }\r\n                   \r\n                    <Divider />\r\n                    <DialogContent>\r\n\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                        />\r\n\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={dateEnd}\r\n                            minDate={dateStart}\r\n                        />\r\n\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Titulo y notas\r\n                        </DialogContentText>\r\n\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Título del evento\"\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            name=\"title\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Note\"\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <Button\r\n                            onClick={handleClose}\r\n                            color=\"primary\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(0.9),\r\n\r\n        },\r\n\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiActionOpenModal } from '../../actions/ui';\r\nimport { actionClearActiveEvent } from '../../actions/events';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () =>{\r\n\r\n        dispatch( uiActionOpenModal() );\r\n        dispatch( actionClearActiveEvent() );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Fab \r\n                color=\"primary\" \r\n                aria-label=\"add\"\r\n                onClick= { handleOpenModal }\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        bottom:25,\r\n        padding:25,\r\n        position: 'fixed',\r\n        right: 25,\r\n      },\r\n    },\r\n  }));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startDeletedEvent } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () =>{\r\n\r\n        dispatch( startDeletedEvent() )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Fab \r\n                color=\"secondary\" \r\n                aria-label=\"delete\"\r\n                onClick = { handleDelete }\r\n            >\r\n                <DeleteIcon  />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        bottom:95,\r\n        padding:25,\r\n        position: 'fixed',\r\n        right: 25,\r\n      },\r\n    },\r\n  }));","import React, { useEffect, useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiActionOpenModal } from '../../actions/ui';\r\nimport { actionClearActiveEvent, actionSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [ lastView, setLastView ] = useState(localStorage.getItem('lastView') || 'month' );\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        dispatch( eventStartLoading());\r\n        \r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch( uiActionOpenModal() );\r\n    }\r\n\r\n\r\n    const onSelectEvent = (e) =>{\r\n        dispatch( actionSetActive(e) );\r\n    }\r\n\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n        \r\n    }  \r\n    const onSelectSlot = (e) =>{\r\n        dispatch( actionClearActiveEvent() )\r\n    }    \r\n\r\n\r\n    const eventStyleGetter= ( event, start, end, isSelected ) =>{\r\n\r\n      const style = {\r\n          backgroundColor: (event.user._id === uid ) ?'#000a42' : '#B3D72B',\r\n          borderRadius: '0px',\r\n          opacity: 0.8,\r\n          display:'block',\r\n          color: '#ffffff',\r\n          \r\n      }\r\n\r\n      return{\r\n          style\r\n      }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n\r\n            <div className=\"container\">\r\n                <Card className=\"card\">\r\n                    <CardContent>\r\n                        <Calendar\r\n                            localizer={localizer}\r\n                            events={events}\r\n                            startAccessor=\"start\"\r\n                            endAccessor=\"end\"\r\n                            messages= { messages }\r\n                            onDoubleClickEvent={ onDoubleClick }\r\n                            onSelectEvent = { onSelectEvent }\r\n                            onSelectSlot= { onSelectSlot }\r\n                            selectable = { true }\r\n                            className=\"calendar-screen\"\r\n                            eventPropGetter = { eventStyleGetter }\r\n                            onView = { onViewChange }\r\n                            view= { lastView }\r\n                            components= {{\r\n                              event:  CalendarEvent\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <AddNewFab />\r\n            \r\n             {\r\n                 activeEvent &&\r\n                 <DeleteEventFab />\r\n             }               \r\n           \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset =()  => {\r\n        setValues( initialState )\r\n    }\r\n\r\n    const handleInputChange =({target}) =>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return[ values, handleInputChange, reset ]\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\n\r\nconst initForm = ()=>({\r\n  \r\n  email:'',\r\n  password:'',\r\n\r\n});\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [ formValues, handleInputChange ]  = useForm( initForm );\r\n    const { email, password } = formValues;\r\n\r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n      e.preventDefault();\r\n      dispatch( startLogin( email, password ) );\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n      {/*   <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n             {/*  <LockOutlinedIcon /> */}\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit }>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value= { email }\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange= { handleInputChange }\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value= { password }\r\n                autoComplete=\"current-password\"\r\n                onChange= { handleInputChange }\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <Link to= \"/auth/register\" >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                \r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n    }\r\n\r\n    \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\n\r\nconst initForm = ()=>({\r\n\r\n    name:'Junior',\r\n    email:'moronjesus@gmail.com',\r\n    password:'1234567',\r\n    confirmpassword:'1234567',\r\n  \r\n  });\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n   \r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [ formValues, handleInputChange ]  = useForm( initForm );\r\n    const { name, email, password, confirmpassword } = formValues;\r\n\r\n\r\n    const handleSubmit=(e)=>{\r\n        \r\n        e.preventDefault();\r\n        if(password !== confirmpassword ){\r\n\r\n            Swal.fire('Error', 'Los password no son iguales', 'error');\r\n\r\n        }else{\r\n\r\n            dispatch( startRegister( name, email, password ) );\r\n        }\r\n\r\n      \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n      {/*   <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n             Register\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit }>\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                onChange= { handleInputChange }\r\n                value= { name }\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange= { handleInputChange }\r\n                value= { email }\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange= { handleInputChange }\r\n                value= { password }\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                type=\"password\"\r\n                id=\"confirmpassword\"\r\n                label=\"Confirm password\"\r\n                name=\"confirmpassword\"\r\n                onChange= { handleInputChange }\r\n                value= { confirmpassword }\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Register\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n    }\r\n\r\n    \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n\r\n        <Switch>\r\n            \r\n            <Route exact path =\"/auth/login\" component={ LoginScreen } />\r\n            <Route exact path =\"/auth/register\" component ={ RegisterScreen } />\r\n\r\n            <Redirect  to= \"/auth/login\" />\r\n\r\n        </Switch>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAunthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component = {( props ) =>(\r\n            ( isAunthenticated )\r\n            ? ( <Redirect to =\"/\" /> )\r\n            : ( <Component { ...props } />)\r\n\r\n        )}\r\n          \r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAunthenticated: PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired,\r\n\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAunthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n        component = {( props ) =>(\r\n            ( isAunthenticated )\r\n            ? ( <Component { ...props } />)\r\n            : ( <Redirect to =\"/auth/login\" /> )\r\n\r\n        )}\r\n          \r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAunthenticated: PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired,\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n     \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAunthenticated= { !!uid } \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAunthenticated= { !!uid }  \r\n                    />\r\n\r\n                    <Redirect to= \"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking : true,\r\n    //uid: null,\r\n    //name: null\r\n\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) =>{\r\n\r\n    switch ( action.type) {\r\n        case types.authLogin:\r\n            \r\n            return {\r\n                ...state,\r\n                checking : false,\r\n                uid: action.payload.uid,\r\n                name:action.payload.name,\r\n            };\r\n\r\n            case types.authCheckingFinish:\r\n            \r\n            return {\r\n                ...state,\r\n                checking : false,\r\n\r\n            }\r\n    \r\n            case types.authLogout:\r\n            \r\n                return {\r\n                    checking : false,\r\n                };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n/* {\r\n    id: new Date().getTime(),\r\n    title: 'Cumpleaños feliz',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fefefe',\r\n    notes: 'comprar el pastel',\r\n    user:{\r\n        _id: '123',\r\n        name: 'Junior',\r\n    }\r\n} */\r\n\r\nconst initialState = {\r\n\r\n        events:[],\r\n        activeEvent: null\r\n\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.eventAddNew:\r\n            \r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload,\r\n                ]\r\n            };\r\n            \r\n        case types.eventSetActive:\r\n            \r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload,\r\n\r\n            };\r\n            \r\n        case types.eventClearActiveEvent:\r\n            \r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            };    \r\n        case types.eventUpdated:\r\n            \r\n            return{\r\n                ...state,\r\n                events: state.events.map((eve) =>(\r\n                      ( eve.id === action.payload.id )\r\n                      ? action.payload\r\n                      : eve   \r\n                      \r\n                ))\r\n            };\r\n\r\n            case types.eventDeleted:\r\n            \r\n                return{\r\n                    ...state,\r\n                    events: state.events.filter((eve) =>(\r\n                          ( eve.id !== state.activeEvent.id )\r\n                          \r\n                    )),\r\n                    activeEvent: null,\r\n                };\r\n                \r\n                case types.eventLoaded:\r\n            \r\n                    return{\r\n                        ...state,\r\n                        events: [\r\n                            ...action.payload\r\n                        ]\r\n                    };\r\n                    \r\n                case types.eventLogoutClear:\r\n            \r\n                    return{\r\n                      ...initialState\r\n                    };      \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modal : false\r\n}\r\n\r\n\r\nexport const uiReducer = ( state= initialState, action ) =>{\r\n\r\n        switch (action.type) {\r\n            case types.uiOpenModal:\r\n                \r\n                return {\r\n                    ...state,\r\n                    modal: true\r\n                };\r\n\r\n            case types.uiCloseModal:\r\n                \r\n                return {\r\n                    ...state,\r\n                    modal:false\r\n                };    \r\n        \r\n            default:\r\n                return state;\r\n        }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const  rootReducer = combineReducers({\r\n\r\n    ui : uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n    \r\n}) ","import { rootReducer } from \"../reducers/rootReducer\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    \r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n   \r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store = { store } >\r\n                <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}