{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/date-events.js","actions/events.js","actions/auth.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","assets/img/imgCalendar.jpg","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvent","events","map","eve","end","moment","toDate","start","actionAddNewEvent","event","type","payload","actionClearActiveEvent","actionUpdateActiveEvent","actionDeletedEvent","eventLoaded","eventLogoutClear","checkingFinish","login","user","logout","NavBar","classes","useStyles","name","useSelector","state","auth","dispatch","useDispatch","className","root","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Typography","variant","title","Button","onClick","clear","butonLogout","endIcon","makeStyles","theme","flexGrow","marginBottom","marginRight","spacing","margin","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiActionOpenModal","now","minutes","seconds","add","hourMore","clone","initialEvent","notes","CalendarModal","modal","ui","activeEvent","calendar","useState","formValues","setFormValues","open","setOpen","React","messageInfo","setMessageInfo","useEffect","handleInputChange","target","value","handleClose","Dialog","onClose","aria-labelledby","disableBackdropClick","noValidate","autoComplete","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","trim","length","a","id","resp","json","ok","Swal","fire","icon","text","msg","console","log","getState","uid","_id","startAddNewEvent","DialogTitle","Divider","DialogContent","utils","DateFnsUtils","ampm","label","onChange","format","minDate","Snackbar","autoHideDuration","ContentProps","snackbarColor","message","TextField","fullWidth","multiline","rows","DialogActions","container","display","flexWrap","textField","marginLeft","width","backgroundColor","AddNewFab","Fab","bottom","padding","right","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","Card","CardContent","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","eventPropGetter","isSelected","style","boxShadow","borderRadius","opacity","fontFamily","marginTop","fontSize","dayPropGetter","onView","setItem","view","components","useForm","initialState","values","setValues","reset","initForm","email","password","LoginScreen","Grid","component","CssBaseline","item","xs","sm","md","image","Paper","elevation","square","paper","Avatar","avatar","form","Date","getTime","startLogin","required","autoFocus","submit","to","Box","mt","height","backgroundImage","imagelogin","backgroundRepeat","backgroundSize","backgroundPosition","flexDirection","alignItems","palette","secondary","main","textAlign","confirmpassword","RegisterScreen","startRegister","AuthRouter","exact","path","PublicRoute","isAunthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ca6aa2a.chunk.js","sourcesContent":[" const baseUrl = process.env.REACT_APP_API_URL;\r\n \r\n export const fetchSinToken = ( endpoint, data, method = 'GET') =>{\r\n\r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n    \r\n    if( method === 'GET' ){\r\n\r\n        return fetch( url );\r\n    }else{\r\n\r\n        return fetch(url , {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify( data ),\r\n\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n \r\nexport const fetchConToken = ( endpoint, data, method = 'GET') =>{\r\n\r\n    const url =`${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n    \r\n    if( method === 'GET' ){\r\n\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'x-token':token,\r\n            }\r\n        } );\r\n    }else{\r\n\r\n        return fetch(url , {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token':token,\r\n            },\r\n            body:JSON.stringify( data ),\r\n\r\n        })\r\n\r\n    }\r\n\r\n}","export const types = {\r\n\r\n    uiOpenModal : '[ui] OPEN MODAL ',\r\n    uiCloseModal : '[ui] CLOSE MODAL',\r\n    \r\n    eventLogoutClear : '[event] CLEAR LOGOUT',\r\n    eventStartAddNew: '[event]  START ADD EVENT',\r\n    eventAddNew : '[event] ADD EVENT',\r\n    eventSetActive: '[event] SET ACTIVE ',\r\n    eventClearActiveEvent: '[event] CLEAR ACTIVE EVENT ',\r\n    eventUpdated: '[event] EVENT UPDATED ',\r\n    eventDeleted: '[event] EVENT DELETED ',\r\n    eventLoaded: '[event]  EVENT LOADED ',\r\n\r\n    authLogin: '[auth] LOGIN',\r\n    authRegister: '[auth] REGISTER',\r\n    authTokenRenew: '[auth] TOKEN RENOVAR',\r\n    authLogout: '[auth] LOGOUT',\r\n    authCheckingFinish: '[auth] FINISH CHECKING'\r\n\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvent = ( events = [] )=>{\r\n    \r\n    return events.map(\r\n        ( eve ) =>({\r\n\r\n            ...eve,\r\n            end: moment( eve.end).toDate(),\r\n            start: moment( eve.start).toDate(),\r\n\r\n        })\r\n    ) \r\n}","import Swal from \"sweetalert2\";\r\nimport { prepareEvent } from \"../helpers/date-events\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const startAddNewEvent = ( event ) =>{ \r\n\r\n    return async ( dispatch, getState ) =>{\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n            try {\r\n \r\n            const resp = await fetchConToken('event', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id = body.event.id;\r\n                event.user ={\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    text: 'Registro éxitoso',\r\n                  });\r\n                dispatch( actionAddNewEvent( event ) )\r\n\r\n            }\r\n           \r\n\r\n                \r\n            } catch (error) {\r\n                \r\n            }\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst actionAddNewEvent = ( event ) =>({ \r\n    type: types.eventAddNew,\r\n    payload: event\r\n\r\n});\r\n\r\n\r\n\r\nexport const actionSetActive = ( event ) =>({ \r\n    type: types.eventSetActive,\r\n    payload: event\r\n\r\n});\r\n\r\n\r\n\r\nexport const actionClearActiveEvent = ( ) =>({ \r\n    type: types.eventClearActiveEvent,\r\n\r\n});\r\n\r\n\r\n\r\nexport const startUpdateEvent = ( event ) =>{\r\n\r\n    return async ( dispatch )=>{\r\n        \r\n        try {\r\n\r\n            const resp = await fetchConToken( `event/${event.id}`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    text: 'Evento modificado con éxitoso',\r\n                  });\r\n\r\n                dispatch( actionUpdateActiveEvent(event) );\r\n\r\n            }else{\r\n                Swal.fire('Eror', body.msg, 'error')\r\n            }\r\n            \r\n\r\n            \r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const actionUpdateActiveEvent = ( event ) =>({ \r\n    type: types.eventUpdated,\r\n    payload: event\r\n\r\n});\r\n\r\n\r\nexport const startDeletedEvent = ( ) =>{\r\n\r\n    return async ( dispatch, getState )=>{\r\n        \r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n       \r\n        try {\r\n\r\n            const resp = await fetchConToken( `event/${id}`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                dispatch( actionDeletedEvent() );\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    text: 'Evento eliminado',\r\n                  })\r\n\r\n            }else{\r\n                Swal.fire('Eror', body.msg, 'error')\r\n            }\r\n            \r\n\r\n            \r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const actionDeletedEvent = () =>({ \r\n    type: types.eventDeleted,\r\n\r\n});\r\n\r\n\r\n\r\nexport const eventStartLoading = ( ) =>{\r\n   \r\n        return async( dispatch ) =>{\r\n\r\n            try {\r\n                \r\n                const resp = await fetchConToken('event');\r\n                const body = await resp.json();\r\n    \r\n                const events = prepareEvent( body.msg )\r\n               dispatch( eventLoaded( events ) );\r\n               \r\n            } catch (error) {\r\n                \r\n                console.log(error);\r\n\r\n            }      \r\n    \r\n        }\r\n   \r\n};\r\n\r\n\r\n\r\nconst eventLoaded = ( events ) =>({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n\r\n});\r\n\r\nexport const eventLogoutClear = ({\r\n    \r\n    type: types.eventLogoutClear\r\n\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogoutClear } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) =>{\r\n\r\n    return async( dispatch ) =>{\r\n\r\n       const resp = await fetchSinToken('auth', { email, password }, 'POST' );\r\n       const body = await resp.json();\r\n\r\n        if( body.ok){\r\n            \r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name:body.name,\r\n            }) )\r\n\r\n        }else{\r\n\r\n                Swal.fire('Error', body.msg, 'error');\r\n\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const startRegister = ( name, email, password  ) =>{\r\n\r\n    return async( dispatch ) =>{\r\n\r\n        const resp = await fetchSinToken('auth/register',{ name, email, password, }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        }else{\r\n\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport const startChecking = () =>{\r\n\r\n    return async( dispatch ) =>{\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        }else{\r\n\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nconst checkingFinish = () =>({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n\r\n});\r\n\r\nexport const startLogout = () =>{\r\n\r\n    return( dispatch ) =>{\r\n\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch ( eventLogoutClear ) \r\n    }\r\n    \r\n\r\n}\r\n\r\nconst logout = () =>({\r\n\r\n    type:types.authLogout,\r\n})\r\n\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {startLogout} from '../../actions/auth';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const classes = useStyles();\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n  const handleLogout = () =>{\r\n    \r\n    dispatch( startLogout() )\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <PersonIcon />\r\n          </IconButton> \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            { name }\r\n          </Typography>\r\n          <Button \r\n            color=\"inherit\"\r\n            onClick= { handleLogout }\r\n            className= {classes.butonLogout}\r\n            endIcon={<ExitToAppIcon />}\r\n          > \r\n            Logout\r\n         \r\n          </Button>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: 20,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n    butonLogout:{\r\n      margin: theme.spacing(1),\r\n    }\r\n  }));","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ( { event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n          <span>{ title }</span>\r\n          <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiActionOpenModal = () =>({\r\n    type: types.uiOpenModal,\r\n\r\n});\r\n\r\nexport const uiActionCloseModal = () =>({\r\n    type: types.uiCloseModal,\r\n\r\n})","import React, { useEffect, useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\r\n\r\nimport { uiActionCloseModal } from '../../actions/ui';\r\nimport { actionClearActiveEvent, startAddNewEvent, startUpdateEvent } from '../../actions/events';\r\n\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst hourMore = now.clone().add(1, 'hours');\r\n\r\nconst initialEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: hourMore.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const classes = useStyles();\r\n    const { modal } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formValues, setFormValues ] = useState( initialEvent );\r\n    const { title, notes, start, end } = formValues;\r\n    const [ open, setOpen ] = useState(false);\r\n    const [messageInfo, setMessageInfo] = React.useState('');\r\n   \r\n    useEffect(() => {\r\n       \r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n           \r\n        }else{\r\n\r\n            setFormValues( initialEvent )\r\n        }\r\n        \r\n    }, [activeEvent, setFormValues,])\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        })\r\n    }\r\n\r\n    const handleClose = () =>{   \r\n        dispatch( uiActionCloseModal() );\r\n        dispatch( actionClearActiveEvent() );\r\n        setFormValues( initialEvent );\r\n\r\n    }\r\n\r\n\r\n    const handletSubmitForm = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n\r\n            setMessageInfo( 'La fecha fin debe ser mayor a la fecha de inicio')\r\n            return setOpen(true);;\r\n        }\r\n\r\n        if(title.trim().length < 2 ){\r\n\r\n            setMessageInfo('El campo titulo es obligatorio')\r\n            return setOpen(true);\r\n        }\r\n        \r\n        if(notes.trim().length < 2 ){\r\n            \r\n            setMessageInfo('El campo nota es obligatorio')\r\n            return setOpen(true);\r\n        } \r\n        if( activeEvent ){\r\n\r\n            dispatch( startUpdateEvent( formValues ) );\r\n\r\n        } else{\r\n\r\n            dispatch( startAddNewEvent( formValues ))\r\n        }\r\n        \r\n        handleClose();\r\n\r\n      \r\n    }\r\n\r\n    const closeSnackbar = () =>{\r\n\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={ modal } onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={ !modal }>\r\n\r\n                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handletSubmitForm}>\r\n                    {\r\n                        (activeEvent )\r\n                        ? <DialogTitle id=\"form-dialog-title\">Editando evento</DialogTitle>\r\n                        : <DialogTitle id=\"form-dialog-title\">Nuevo evento</DialogTitle>\r\n                    }\r\n                   \r\n                    <Divider />\r\n                    <DialogContent>\r\n\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                             <KeyboardDateTimePicker\r\n                                variant=\"inline\"\r\n                                ampm={false}\r\n                                label=\"Inicio de vento\"\r\n                                value={start}\r\n                                onChange={handleStartDateChange}\r\n                                format=\"yyyy/MM/dd HH:mm\"\r\n                            />\r\n\r\n                            <KeyboardDateTimePicker \r\n                                variant=\"inline\"\r\n                                ampm={false}\r\n                                label=\"Fin de evento\"\r\n                                value={end}\r\n                                onChange={handleEndDateChange}\r\n                                format=\"yyyy/MM/dd HH:mm\"\r\n                                minDate={start}\r\n                                \r\n                            />\r\n\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                        <DialogTitle >\r\n                            Titulo y notas \r\n                        </DialogTitle>\r\n\r\n                        <Snackbar \r\n                        open={open} \r\n                        autoHideDuration={4000} \r\n                        onClose={closeSnackbar} \r\n                        ContentProps={{\r\n                            className: classes.snackbarColor\r\n                          }}\r\n                        message={ messageInfo }>\r\n                            \r\n                        </Snackbar>\r\n\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Título \"\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            name=\"title\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                            \r\n                        />\r\n\r\n                        <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Nota\"\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <Button\r\n                            onClick={handleClose}\r\n                            color=\"primary\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(0.9),\r\n        },\r\n    },\r\n\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },\r\n\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n\r\n      snackbarColor:{\r\n          backgroundColor:'#cd2f2f',\r\n         \r\n      }\r\n    \r\n}));\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiActionOpenModal } from '../../actions/ui';\r\nimport { actionClearActiveEvent } from '../../actions/events';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () =>{\r\n\r\n        dispatch( uiActionOpenModal() );\r\n        dispatch( actionClearActiveEvent() );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Fab \r\n                color=\"primary\" \r\n                aria-label=\"add\"\r\n                onClick= { handleOpenModal }\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        bottom:25,\r\n        padding:25,\r\n        position: 'fixed',\r\n        right: 25,\r\n      },\r\n    },\r\n  }));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startDeletedEvent } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () =>{\r\n\r\n        dispatch( startDeletedEvent() )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Fab \r\n                color=\"secondary\" \r\n                aria-label=\"delete\"\r\n                onClick = { handleDelete }\r\n            >\r\n                <DeleteIcon  />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        bottom:95,\r\n        padding:25,\r\n        position: 'fixed',\r\n        right: 25,\r\n      },\r\n    },\r\n  }));","import React, { useEffect, useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiActionOpenModal } from '../../actions/ui';\r\nimport { actionClearActiveEvent, actionSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [ lastView, setLastView ] = useState(localStorage.getItem('lastView') || 'month' );\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        dispatch( eventStartLoading());\r\n        \r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch( uiActionOpenModal() );\r\n    }\r\n\r\n\r\n    const onSelectEvent = (e) =>{\r\n        dispatch( actionSetActive(e) );\r\n    }\r\n\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n        \r\n    }  \r\n    const onSelectSlot = (e) =>{\r\n        dispatch( actionClearActiveEvent() )\r\n    }    \r\n\r\n\r\n    const eventStyleGetter= ( event, start, end, isSelected ) =>{\r\n\r\n\r\n      const style = {\r\n          boxShadow: '2px 2px 8px 0 #BEBFC2',\r\n          backgroundColor: (event.user._id === uid ) ?'#091175' : '#D0E726',\r\n          borderRadius: '5px',\r\n          opacity: 0.8,\r\n          display:'block',\r\n          color: '#ffffff',\r\n          fontFamily:'Helvetica, Arial, sans-serif',\r\n          marginTop:2,\r\n          marginBottom:2,\r\n          padding: 4,\r\n          fontSize: 14\r\n          \r\n      }\r\n\r\n      return{\r\n          style\r\n      }\r\n\r\n    }\r\n\r\n    const calendarStyle = () =>{\r\n\r\n       const  style = {\r\n            margin:2,\r\n            boxShadow:' 0px 1px 1px #c2c2c2',\r\n           \r\n          }\r\n\r\n          return{\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n\r\n            <div className=\"container\">\r\n                <Card className=\"card\">\r\n                    <CardContent>\r\n                        <Calendar\r\n                            localizer={localizer}\r\n                            events={events}\r\n                            startAccessor=\"start\"\r\n                            endAccessor=\"end\"\r\n                            messages= { messages }\r\n                            onDoubleClickEvent={ onDoubleClick }\r\n                            onSelectEvent = { onSelectEvent }\r\n                            onSelectSlot= { onSelectSlot }\r\n                            selectable = { true }\r\n                            className=\"calendar-screen\"\r\n                            eventPropGetter = { eventStyleGetter }\r\n                            dayPropGetter= { calendarStyle }\r\n                            onView = { onViewChange }\r\n                            view= { lastView }\r\n                            components= {{\r\n                              event:  CalendarEvent\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <AddNewFab />\r\n            \r\n             {\r\n                 activeEvent &&\r\n                 <DeleteEventFab />\r\n             }               \r\n           \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset =()  => {\r\n        setValues( initialState )\r\n    }\r\n\r\n    const handleInputChange =({target}) =>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return[ values, handleInputChange, reset ]\r\n}\r\n","export default __webpack_public_path__ + \"static/media/imgCalendar.e631632d.jpg\";","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\n\r\nimport imagelogin  from '../../assets/img/imgCalendar.jpg';\r\n\r\n\r\nconst initForm = ()=>({\r\n  \r\n  email:'',\r\n  password:'',\r\n\r\n});\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [ formValues, handleInputChange ]  = useForm( initForm );\r\n    const { email, password } = formValues;\r\n\r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n      e.preventDefault();\r\n      dispatch( startLogin( email, password ) );\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n       <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n             {/*  <LockOutlinedIcon /> */}\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit }>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value= { email }\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange= { handleInputChange }\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value= { password }\r\n                autoComplete=\"current-password\"\r\n                onChange= { handleInputChange }\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n                  <Link to= \"/auth/register\" >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n              <Box mt={5}>\r\n                \r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n    }\r\n\r\n    \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n   \r\n      backgroundImage: `url(${imagelogin})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n      textAlign:'center',\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n  }));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\nimport imagelogin  from '../../assets/img/imgCalendar.jpg';\r\n\r\nconst initForm = ()=>({\r\n\r\n    name:'',\r\n    email:'',\r\n    password:'',\r\n    confirmpassword:'',\r\n  \r\n  });\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n   \r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [ formValues, handleInputChange ]  = useForm( initForm );\r\n    const { name, email, password, confirmpassword } = formValues;\r\n\r\n\r\n    const handleSubmit=(e)=>{\r\n        \r\n        e.preventDefault();\r\n        if(password !== confirmpassword ){\r\n\r\n            Swal.fire('Error', 'Los password no son iguales', 'error');\r\n\r\n        }else{\r\n\r\n            dispatch( startRegister( name, email, password ) );\r\n        }\r\n\r\n      \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n       <Grid item xs={false} sm={4} md={7} className={classes.image} /> \r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n             Register\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit }>\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                onChange= { handleInputChange }\r\n                value= { name }\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange= { handleInputChange }\r\n                value= { email }\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange= { handleInputChange }\r\n                value= { password }\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                type=\"password\"\r\n                id=\"confirmpassword\"\r\n                label=\"Confirm password\"\r\n                name=\"confirmpassword\"\r\n                onChange= { handleInputChange }\r\n                value= { confirmpassword }\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Register\r\n              </Button>\r\n\r\n              <Link to=\"/auth/login\" >\r\n                    Alredy registered?\r\n                </Link>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n    }\r\n\r\n    \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: `url(${imagelogin})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', \r\n      marginTop: theme.spacing(1),\r\n      textAlign:'center',\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n  }));","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n\r\n        <Switch>\r\n            \r\n            <Route exact path =\"/auth/login\" component={ LoginScreen } />\r\n            <Route exact path =\"/auth/register\" component ={ RegisterScreen } />\r\n\r\n            <Redirect  to= \"/auth/login\" />\r\n\r\n        </Switch>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAunthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component = {( props ) =>(\r\n            ( isAunthenticated )\r\n            ? ( <Redirect to =\"/\" /> )\r\n            : ( <Component { ...props } />)\r\n\r\n        )}\r\n          \r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAunthenticated: PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired,\r\n\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAunthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n        component = {( props ) =>(\r\n            ( isAunthenticated )\r\n            ? ( <Component { ...props } />)\r\n            : ( <Redirect to =\"/auth/login\" /> )\r\n\r\n        )}\r\n          \r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAunthenticated: PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired,\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n     \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAunthenticated= { !!uid } \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAunthenticated= { !!uid }  \r\n                    />\r\n\r\n                    <Redirect to= \"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking : true,\r\n    //uid: null,\r\n    //name: null\r\n\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) =>{\r\n\r\n    switch ( action.type) {\r\n        case types.authLogin:\r\n            \r\n            return {\r\n                ...state,\r\n                checking : false,\r\n                uid: action.payload.uid,\r\n                name:action.payload.name,\r\n            };\r\n\r\n            case types.authCheckingFinish:\r\n            \r\n            return {\r\n                ...state,\r\n                checking : false,\r\n\r\n            }\r\n    \r\n            case types.authLogout:\r\n            \r\n                return {\r\n                    checking : false,\r\n                };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n/* {\r\n    id: new Date().getTime(),\r\n    title: 'Cumpleaños feliz',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fefefe',\r\n    notes: 'comprar el pastel',\r\n    user:{\r\n        _id: '123',\r\n        name: 'Junior',\r\n    }\r\n} */\r\n\r\nconst initialState = {\r\n\r\n        events:[],\r\n        activeEvent: null\r\n\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.eventAddNew:\r\n            \r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload,\r\n                ]\r\n            };\r\n            \r\n        case types.eventSetActive:\r\n            \r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload,\r\n\r\n            };\r\n            \r\n        case types.eventClearActiveEvent:\r\n            \r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            };    \r\n        case types.eventUpdated:\r\n            \r\n            return{\r\n                ...state,\r\n                events: state.events.map((eve) =>(\r\n                      ( eve.id === action.payload.id )\r\n                      ? action.payload\r\n                      : eve   \r\n                      \r\n                ))\r\n            };\r\n\r\n            case types.eventDeleted:\r\n            \r\n                return{\r\n                    ...state,\r\n                    events: state.events.filter((eve) =>(\r\n                          ( eve.id !== state.activeEvent.id )\r\n                          \r\n                    )),\r\n                    activeEvent: null,\r\n                };\r\n                \r\n                case types.eventLoaded:\r\n            \r\n                    return{\r\n                        ...state,\r\n                        events: [\r\n                            ...action.payload\r\n                        ]\r\n                    };\r\n                    \r\n                case types.eventLogoutClear:\r\n            \r\n                    return{\r\n                      ...initialState\r\n                    };      \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modal : false\r\n}\r\n\r\n\r\nexport const uiReducer = ( state= initialState, action ) =>{\r\n\r\n        switch (action.type) {\r\n            case types.uiOpenModal:\r\n                \r\n                return {\r\n                    ...state,\r\n                    modal: true\r\n                };\r\n\r\n            case types.uiCloseModal:\r\n                \r\n                return {\r\n                    ...state,\r\n                    modal:false\r\n                };    \r\n        \r\n            default:\r\n                return state;\r\n        }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const  rootReducer = combineReducers({\r\n\r\n    ui : uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n    \r\n}) ","import { rootReducer } from \"../reducers/rootReducer\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    \r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n   \r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store = { store } >\r\n                <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}